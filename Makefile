# Makefile for AI Chat Server
# –ü—ñ–¥—Ç—Ä–∏–º—É—î –∑–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —á–∞—Ç—É –∑ 24 AI –º–æ–¥–µ–ª—è–º–∏ –∑ –±—É–¥—å-—è–∫–æ—ó –ø–∞–ø–∫–∏
#
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
#   make chat          # –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —á–∞—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3010
#   make chat PORT=3011 # –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–∞ —ñ–Ω—à–æ–º—É –ø–æ—Ä—Ç—É  
#   make stop          # –∑—É–ø–∏–Ω–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
#   make restart       # –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
#   make status        # –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å
#   make logs          # –ø–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏
#   make test          # —à–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç API
#   make install       # –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ

# –ó–º—ñ–Ω–Ω—ñ
SCRIPT_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
PORT ?= 3010
LOG_FILE = $(SCRIPT_DIR)/server.log
PID_FILE = $(SCRIPT_DIR)/server.pid
HEALTH_PATH = /health
SIMPLE_CHAT_PATH = /simple.html
MAX_WAIT_KILL = 5
MAX_WAIT_HEALTH = 30
HEALTH_DELAY = 0.5

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
BLUE = \033[0;34m
NC = \033[0m # No Color

.PHONY: chat stop restart status logs test models install clean help

# –û—Å–Ω–æ–≤–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ - –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —á–∞—Ç
chat: require-deps
	@echo "$(BLUE)üîÑ –ó–∞–ø—É—Å–∫ AI —á–∞—Ç—É –Ω–∞ –ø–æ—Ä—Ç—É $(PORT)...$(NC)"
	@$(MAKE) -s stop-if-running
	@$(MAKE) -s start-server
	@$(MAKE) -s wait-health

# –ó—É–ø–∏–Ω–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
stop: stop-if-running
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ$(NC)"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
restart: stop chat

# –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
status:
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É $(PORT):$(NC)"
	@if lsof -i :$(PORT) >/dev/null 2>&1; then \
		echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î$(NC)"; \
		if [ -f "$(PID_FILE)" ]; then \
			echo "üìã PID: $$(cat $(PID_FILE))"; \
		fi; \
		if curl -fsS --max-time 3 "http://127.0.0.1:$(PORT)$(HEALTH_PATH)" >/dev/null 2>&1; then \
			echo "$(GREEN)‚úÖ Health check OK$(NC)"; \
		else \
			echo "$(YELLOW)‚ö†Ô∏è  Health check failed$(NC)"; \
		fi; \
	else \
		echo "$(RED)‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–∞—Ü—é—î$(NC)"; \
	fi

# –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏
logs:
	@if [ -f "$(LOG_FILE)" ]; then \
		echo "$(BLUE)üìã –û—Å—Ç–∞–Ω–Ω—ñ 20 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—É:$(NC)"; \
		tail -n 20 "$(LOG_FILE)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $(LOG_FILE)$(NC)"; \
	fi

# –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç API
test:
	@echo "$(BLUE)üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API...$(NC)"
	@curl -X POST "http://127.0.0.1:$(PORT)/v1/chat/completions" \
		-H 'Content-Type: application/json' \
		-d '{"messages":[{"role":"user","content":"–ü—Ä–∏–≤—ñ—Ç! –¢–µ—Å—Ç —á–∞—Ç—É –∑ —É—Å—ñ–º–∞ –º–æ–¥–µ–ª—è–º–∏."}], "model":"gpt-4o-mini"}' \
		-w "\n$(GREEN)‚úÖ –¢–µ—Å—Ç —É—Å–ø—ñ—à–Ω–∏–π!$(NC)\n" || \
		echo "$(RED)‚ùå –¢–µ—Å—Ç –Ω–µ –≤–¥–∞–≤—Å—è$(NC)"

# –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π
models:
	@echo "$(BLUE)ü§ñ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö AI –º–æ–¥–µ–ª–µ–π:$(NC)"
	@curl -s -X GET "http://127.0.0.1:$(PORT)/v1/models" \
		-H "Authorization: Bearer sk-test" | \
		python3 -c "import json,sys; data=json.load(sys.stdin); [print(f\"  {m['owned_by'].upper()}: {m['id']}\") for m in data['data']]" 2>/dev/null || \
		echo "$(YELLOW)‚ö†Ô∏è  –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π. –ß–∏ –∑–∞–ø—É—â–µ–Ω–∏–π —Å–µ—Ä–≤–µ—Ä?$(NC)"

# –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
install:
	@echo "$(BLUE)üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É...$(NC)"
	@if [ ! -d "/usr/local/bin" ]; then \
		echo "$(RED)‚ùå /usr/local/bin –Ω–µ —ñ—Å–Ω—É—î$(NC)"; \
		exit 1; \
	fi
	@echo '#!/usr/bin/env bash' > /tmp/aichat
	@echo 'cd "$(SCRIPT_DIR)" && make chat "$$@"' >> /tmp/aichat
	@chmod +x /tmp/aichat
	@sudo mv /tmp/aichat /usr/local/bin/aichat
	@echo "$(GREEN)‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É 'aichat' –∑ –±—É–¥—å-—è–∫–æ—ó –ø–∞–ø–∫–∏$(NC)"
	@echo "$(BLUE)üí° –ü—Ä–∏–∫–ª–∞–¥–∏:$(NC)"
	@echo "  aichat            # –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–∞ –ø–æ—Ä—Ç—É 3010"
	@echo "  aichat PORT=3011  # –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–∞ –ø–æ—Ä—Ç—É 3011"

# –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
clean:
	@echo "$(BLUE)üßπ –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤...$(NC)"
	@rm -f "$(LOG_FILE)" "$(PID_FILE)"
	@echo "$(GREEN)‚úÖ –û—á–∏—â–µ–Ω–æ$(NC)"

# –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
help:
	@echo "$(BLUE)ü§ñ AI Chat Server - –ü—Ä–æ—Å—Ç–∏–π —á–∞—Ç –∑ 24 AI –º–æ–¥–µ–ª—è–º–∏$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:$(NC)"
	@echo "  make chat          –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —á–∞—Ç —Å–µ—Ä–≤–µ—Ä (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ—Ä—Ç 3010)"
	@echo "  make chat PORT=N   –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–∞ –≤–∫–∞–∑–∞–Ω–æ–º—É –ø–æ—Ä—Ç—É"
	@echo "  make stop          –ó—É–ø–∏–Ω–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä"
	@echo "  make restart       –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä"
	@echo "  make status        –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  make logs          –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  make test          –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç API"
	@echo "  make models        –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö AI –º–æ–¥–µ–ª–µ–π"
	@echo "  make install       –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ (–∫–æ–º–∞–Ω–¥–∞ 'aichat')"
	@echo "  make clean         –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏"
	@echo "  make help          –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É"
	@echo ""
	@echo "$(YELLOW)–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –º–æ–¥–µ–ª—ñ:$(NC)"
	@echo "  ü§ñ OpenAI: gpt-4o, gpt-4o-mini"
	@echo "  üè¢ Microsoft: phi-3-mini-4k, phi-3-medium-4k"
	@echo "  üìö AI21: jamba-instruct"
	@echo "  üîÑ Cohere: command-r, command-r-plus"
	@echo "  ü¶ô Meta: llama-3.1-405b, llama-3.1-70b, llama-3.1-8b"
	@echo "  üåü Mistral: mistral-large, mistral-nemo, mistral-small"
	@echo ""
	@echo "$(GREEN)üåê –í–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://127.0.0.1:$(PORT)$(NC)"

# –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
require-deps:
	@command -v lsof >/dev/null 2>&1 || { echo "$(RED)‚ùå lsof –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"; exit 1; }
	@command -v curl >/dev/null 2>&1 || { echo "$(RED)‚ùå curl –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"; exit 1; }
	@command -v node >/dev/null 2>&1 || { echo "$(RED)‚ùå node –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"; exit 1; }
	@if [ ! -f "$(SCRIPT_DIR)/server.js" ]; then \
		echo "$(RED)‚ùå server.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ $(SCRIPT_DIR)$(NC)"; \
		exit 1; \
	fi
	@if [ ! -f "$(SCRIPT_DIR)/public/simple.html" ]; then \
		echo "$(RED)‚ùå public/simple.html –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"; \
		exit 1; \
	fi

stop-if-running:
	@pids=$$(lsof -t -nP -iTCP:$(PORT) -sTCP:LISTEN 2>/dev/null || true); \
	if [ -n "$$pids" ]; then \
		echo "$(YELLOW)üõë –ó—É–ø–∏–Ω—è—é –ø—Ä–æ—Ü–µ—Å(–∏) –Ω–∞ –ø–æ—Ä—Ç—É $(PORT): $$pids$(NC)"; \
		kill $$pids 2>/dev/null || true; \
		waited=0; \
		while [ $$waited -lt $(MAX_WAIT_KILL) ]; do \
			sleep 1; \
			waited=$$((waited+1)); \
			still=$$(lsof -t -nP -iTCP:$(PORT) -sTCP:LISTEN 2>/dev/null || true); \
			if [ -z "$$still" ]; then \
				break; \
			fi; \
		done; \
		still=$$(lsof -t -nP -iTCP:$(PORT) -sTCP:LISTEN 2>/dev/null || true); \
		if [ -n "$$still" ]; then \
			echo "$(YELLOW)‚ö° –ü—Ä–∏–º—É—Å–æ–≤–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è: $$still$(NC)"; \
			kill -9 $$still 2>/dev/null || true; \
		fi; \
	fi

start-server:
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É $(PORT)...$(NC)"
	@cd "$(SCRIPT_DIR)" && nohup env PORT="$(PORT)" node server.js >> "$(LOG_FILE)" 2>&1 & echo $$! > "$(PID_FILE)"
	@if [ -f "$(PID_FILE)" ]; then \
		echo "$(GREEN)‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –∑ PID $$(cat $(PID_FILE))$(NC)"; \
	fi

wait-health:
	@echo "$(BLUE)üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	@attempts=$(MAX_WAIT_HEALTH); \
	health_url="http://127.0.0.1:$(PORT)$(HEALTH_PATH)"; \
	simple_url="http://127.0.0.1:$(PORT)$(SIMPLE_CHAT_PATH)"; \
	for i in $$(seq 1 $$attempts); do \
		if curl -fsS --max-time 3 "$$health_url" >/dev/null 2>&1; then \
			echo "$(GREEN)‚úÖ Health OK$(NC)"; \
			if curl -fsS --max-time 3 "$$simple_url" >/dev/null 2>&1; then \
				echo "$(GREEN)‚úÖ Simple chat OK$(NC)"; \
			fi; \
			echo ""; \
			echo "$(GREEN)üéâ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤–∏–π!$(NC)"; \
			echo "$(BLUE)üåê –ü—Ä–æ—Å—Ç–∏–π —á–∞—Ç –∑ —É—Å—ñ–º–∞ 24 –º–æ–¥–µ–ª—è–º–∏: http://127.0.0.1:$(PORT)$(NC)"; \
			echo "$(BLUE)ü§ñ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ OpenAI, Microsoft, AI21, Cohere, Meta, Mistral$(NC)"; \
			exit 0; \
		fi; \
		if [ $$((i % 5)) -eq 0 ]; then \
			echo "$(YELLOW)‚è≥ –û—á—ñ–∫—É—é –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞... ($$i/$$attempts —Å–ø—Ä–æ–±)$(NC)"; \
		fi; \
		sleep $(HEALTH_DELAY); \
	done; \
	echo "$(RED)‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –ø—ñ—Å–ª—è $$attempts —Å–ø—Ä–æ–±$(NC)"; \
	echo "$(BLUE)üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: make logs$(NC)"; \
	exit 1

# –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
.DEFAULT_GOAL := help
